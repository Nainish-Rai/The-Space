generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  created_time      DateTime @default(now())
  email             String   @unique
  first_name        String?
  last_name         String?
  gender            String?
  profile_image_url String?
  user_id           String   @unique
  subscription      String?
   bookmarks    Bookmark[]
  notes        Note[]
  todos        Todo[]
  weatherPrefs WeatherPreference[]
  aiChats      AIChat[]
}
model Bookmark {
  id        BigInt   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  url       String
  category  String?
  createdAt DateTime @default(now())
}

model Note {
  id        BigInt   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  title     String?
  content   String
  tags      String[]
  createdAt DateTime @default(now())
}

model Todo {
  id        BigInt   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  task      String
  dueDate   DateTime?
  priority  String?
  status    String   @default("pending")
  createdAt DateTime @default(now())
}

model WeatherPreference {
  id        BigInt   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  location  String
  units     String   @default("metric")
}

model AIChat {
  id        BigInt   @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  response  String?
  createdAt DateTime @default(now())
}